/*
 * generated by Xtext 2.19.0
 */
grammar InternalBrowserAutomation;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.BrowserAutomationGrammarAccess;

}

@parser::members {

 	private BrowserAutomationGrammarAccess grammarAccess;

    public InternalBrowserAutomationParser(TokenStream input, BrowserAutomationGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected BrowserAutomationGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getTisiLaunchParserRuleCall_0_0());
				}
				lv_tisi_0_0=ruleLaunch
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"tisi",
						lv_tisi_0_0,
						"org.xtext.example.mydsl.BrowserAutomation.Launch");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getTisiClickParserRuleCall_1_0());
				}
				lv_tisi_1_0=ruleClick
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"tisi",
						lv_tisi_1_0,
						"org.xtext.example.mydsl.BrowserAutomation.Click");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleLaunch
entryRuleLaunch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLaunchRule()); }
	iv_ruleLaunch=ruleLaunch
	{ $current=$iv_ruleLaunch.current; }
	EOF;

// Rule Launch
ruleLaunch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GOTO'
		{
			newLeafNode(otherlv_0, grammarAccess.getLaunchAccess().getGOTOKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLaunchAccess().getUUrlParserRuleCall_1_0());
				}
				lv_u_1_0=ruleUrl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLaunchRule());
					}
					set(
						$current,
						"u",
						lv_u_1_0,
						"org.xtext.example.mydsl.BrowserAutomation.Url");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='ON'
		{
			newLeafNode(otherlv_2, grammarAccess.getLaunchAccess().getONKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLaunchAccess().getBBrowserParserRuleCall_3_0());
				}
				lv_b_3_0=ruleBrowser
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLaunchRule());
					}
					set(
						$current,
						"b",
						lv_b_3_0,
						"org.xtext.example.mydsl.BrowserAutomation.Browser");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleClick
entryRuleClick returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClickRule()); }
	iv_ruleClick=ruleClick
	{ $current=$iv_ruleClick.current; }
	EOF;

// Rule Click
ruleClick returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CLICK'
		{
			newLeafNode(otherlv_0, grammarAccess.getClickAccess().getCLICKKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClickAccess().getCComposantParserRuleCall_1_0());
				}
				lv_c_1_0=ruleComposant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClickRule());
					}
					set(
						$current,
						"c",
						lv_c_1_0,
						"org.xtext.example.mydsl.BrowserAutomation.Composant");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='WHERE'
		{
			newLeafNode(otherlv_2, grammarAccess.getClickAccess().getWHEREKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClickAccess().getAAttributParserRuleCall_3_0());
				}
				lv_a_3_0=ruleAttribut
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClickRule());
					}
					set(
						$current,
						"a",
						lv_a_3_0,
						"org.xtext.example.mydsl.BrowserAutomation.Attribut");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='CONTAINS'
		{
			newLeafNode(otherlv_4, grammarAccess.getClickAccess().getCONTAINSKeyword_4());
		}
		this_STRING_5=RULE_STRING
		{
			newLeafNode(this_STRING_5, grammarAccess.getClickAccess().getSTRINGTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleComposant
entryRuleComposant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComposantRule()); }
	iv_ruleComposant=ruleComposant
	{ $current=$iv_ruleComposant.current; }
	EOF;

// Rule Composant
ruleComposant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_STRING
			{
				newLeafNode(lv_name_0_0, grammarAccess.getComposantAccess().getNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getComposantRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleAttribut
entryRuleAttribut returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributRule()); }
	iv_ruleAttribut=ruleAttribut
	{ $current=$iv_ruleAttribut.current; }
	EOF;

// Rule Attribut
ruleAttribut returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getAttributAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAttributRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleBrowser
entryRuleBrowser returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBrowserRule()); }
	iv_ruleBrowser=ruleBrowser
	{ $current=$iv_ruleBrowser.current; }
	EOF;

// Rule Browser
ruleBrowser returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getBrowserAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBrowserRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleUrl
entryRuleUrl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUrlRule()); }
	iv_ruleUrl=ruleUrl
	{ $current=$iv_ruleUrl.current; }
	EOF;

// Rule Url
ruleUrl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_STRING
			{
				newLeafNode(lv_name_0_0, grammarAccess.getUrlAccess().getNameSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getUrlRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
