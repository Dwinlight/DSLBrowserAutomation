/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class BrowserAutomationGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.BrowserAutomation.Model");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTisiAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTisiLaunchParserRuleCall_0_0 = (RuleCall)cTisiAssignment_0.eContents().get(0);
		private final Assignment cTisiAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTisiClickParserRuleCall_1_0 = (RuleCall)cTisiAssignment_1.eContents().get(0);
		
		//Model:
		//	tisi+=Launch tisi+=Click?;
		@Override public ParserRule getRule() { return rule; }
		
		//tisi+=Launch tisi+=Click?
		public Group getGroup() { return cGroup; }
		
		//tisi+=Launch
		public Assignment getTisiAssignment_0() { return cTisiAssignment_0; }
		
		//Launch
		public RuleCall getTisiLaunchParserRuleCall_0_0() { return cTisiLaunchParserRuleCall_0_0; }
		
		//tisi+=Click?
		public Assignment getTisiAssignment_1() { return cTisiAssignment_1; }
		
		//Click
		public RuleCall getTisiClickParserRuleCall_1_0() { return cTisiClickParserRuleCall_1_0; }
	}
	public class LaunchElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.BrowserAutomation.Launch");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGOTOKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cUAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUUrlParserRuleCall_1_0 = (RuleCall)cUAssignment_1.eContents().get(0);
		private final Keyword cONKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cBAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBBrowserParserRuleCall_3_0 = (RuleCall)cBAssignment_3.eContents().get(0);
		
		//Launch:
		//	'GOTO' u=Url 'ON' b=Browser
		//	//'CLICK' l1=Link 'WHERE' l2=Content 'CONTAINS' STRING 
		//	//'IS'  l=Link 'WHERE' c= Content 'CONTAINS' STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'GOTO' u=Url 'ON' b=Browser
		public Group getGroup() { return cGroup; }
		
		//'GOTO'
		public Keyword getGOTOKeyword_0() { return cGOTOKeyword_0; }
		
		//u=Url
		public Assignment getUAssignment_1() { return cUAssignment_1; }
		
		//Url
		public RuleCall getUUrlParserRuleCall_1_0() { return cUUrlParserRuleCall_1_0; }
		
		//'ON'
		public Keyword getONKeyword_2() { return cONKeyword_2; }
		
		//b=Browser
		public Assignment getBAssignment_3() { return cBAssignment_3; }
		
		//Browser
		public RuleCall getBBrowserParserRuleCall_3_0() { return cBBrowserParserRuleCall_3_0; }
	}
	public class ClickElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.BrowserAutomation.Click");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCLICKKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCComposantParserRuleCall_1_0 = (RuleCall)cCAssignment_1.eContents().get(0);
		private final Keyword cWHEREKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAAttributParserRuleCall_3_0 = (RuleCall)cAAssignment_3.eContents().get(0);
		private final Keyword cCONTAINSKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final RuleCall cSTRINGTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//Click:
		//	'CLICK' c=Composant 'WHERE' a=Attribut 'CONTAINS' STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//'CLICK' c=Composant 'WHERE' a=Attribut 'CONTAINS' STRING
		public Group getGroup() { return cGroup; }
		
		//'CLICK'
		public Keyword getCLICKKeyword_0() { return cCLICKKeyword_0; }
		
		//c=Composant
		public Assignment getCAssignment_1() { return cCAssignment_1; }
		
		//Composant
		public RuleCall getCComposantParserRuleCall_1_0() { return cCComposantParserRuleCall_1_0; }
		
		//'WHERE'
		public Keyword getWHEREKeyword_2() { return cWHEREKeyword_2; }
		
		//a=Attribut
		public Assignment getAAssignment_3() { return cAAssignment_3; }
		
		//Attribut
		public RuleCall getAAttributParserRuleCall_3_0() { return cAAttributParserRuleCall_3_0; }
		
		//'CONTAINS'
		public Keyword getCONTAINSKeyword_4() { return cCONTAINSKeyword_4; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_5() { return cSTRINGTerminalRuleCall_5; }
	}
	public class ComposantElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.BrowserAutomation.Composant");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Composant:
		//	name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}
	public class AttributElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.BrowserAutomation.Attribut");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Attribut:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class ContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.BrowserAutomation.Content");
		private final Assignment cContenuAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cContenuSTRINGTerminalRuleCall_0 = (RuleCall)cContenuAssignment.eContents().get(0);
		
		//Content:
		//	contenu=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//contenu=STRING
		public Assignment getContenuAssignment() { return cContenuAssignment; }
		
		//STRING
		public RuleCall getContenuSTRINGTerminalRuleCall_0() { return cContenuSTRINGTerminalRuleCall_0; }
	}
	public class BrowserElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.BrowserAutomation.Browser");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Browser:
		//	name=ID;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0() { return cNameIDTerminalRuleCall_0; }
	}
	public class UrlElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.BrowserAutomation.Url");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Url:
		//	name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}
	public class GreetingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.BrowserAutomation.Greeting");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHelloKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cExclamationMarkKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Greeting:
		//	'Hello' name=ID '!';
		@Override public ParserRule getRule() { return rule; }
		
		//'Hello' name=ID '!'
		public Group getGroup() { return cGroup; }
		
		//'Hello'
		public Keyword getHelloKeyword_0() { return cHelloKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'!'
		public Keyword getExclamationMarkKeyword_2() { return cExclamationMarkKeyword_2; }
	}
	
	
	private final ModelElements pModel;
	private final LaunchElements pLaunch;
	private final ClickElements pClick;
	private final ComposantElements pComposant;
	private final AttributElements pAttribut;
	private final ContentElements pContent;
	private final BrowserElements pBrowser;
	private final UrlElements pUrl;
	private final GreetingElements pGreeting;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public BrowserAutomationGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pLaunch = new LaunchElements();
		this.pClick = new ClickElements();
		this.pComposant = new ComposantElements();
		this.pAttribut = new AttributElements();
		this.pContent = new ContentElements();
		this.pBrowser = new BrowserElements();
		this.pUrl = new UrlElements();
		this.pGreeting = new GreetingElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.BrowserAutomation".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//	tisi+=Launch tisi+=Click?;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//Launch:
	//	'GOTO' u=Url 'ON' b=Browser
	//	//'CLICK' l1=Link 'WHERE' l2=Content 'CONTAINS' STRING 
	//	//'IS'  l=Link 'WHERE' c= Content 'CONTAINS' STRING
	//;
	public LaunchElements getLaunchAccess() {
		return pLaunch;
	}
	
	public ParserRule getLaunchRule() {
		return getLaunchAccess().getRule();
	}
	
	//Click:
	//	'CLICK' c=Composant 'WHERE' a=Attribut 'CONTAINS' STRING;
	public ClickElements getClickAccess() {
		return pClick;
	}
	
	public ParserRule getClickRule() {
		return getClickAccess().getRule();
	}
	
	//Composant:
	//	name=STRING;
	public ComposantElements getComposantAccess() {
		return pComposant;
	}
	
	public ParserRule getComposantRule() {
		return getComposantAccess().getRule();
	}
	
	//Attribut:
	//	name=ID;
	public AttributElements getAttributAccess() {
		return pAttribut;
	}
	
	public ParserRule getAttributRule() {
		return getAttributAccess().getRule();
	}
	
	//Content:
	//	contenu=STRING;
	public ContentElements getContentAccess() {
		return pContent;
	}
	
	public ParserRule getContentRule() {
		return getContentAccess().getRule();
	}
	
	//Browser:
	//	name=ID;
	public BrowserElements getBrowserAccess() {
		return pBrowser;
	}
	
	public ParserRule getBrowserRule() {
		return getBrowserAccess().getRule();
	}
	
	//Url:
	//	name=STRING;
	public UrlElements getUrlAccess() {
		return pUrl;
	}
	
	public ParserRule getUrlRule() {
		return getUrlAccess().getRule();
	}
	
	//Greeting:
	//	'Hello' name=ID '!';
	public GreetingElements getGreetingAccess() {
		return pGreeting;
	}
	
	public ParserRule getGreetingRule() {
		return getGreetingAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
